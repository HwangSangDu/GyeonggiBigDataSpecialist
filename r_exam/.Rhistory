cbind
y1=matrix(1:15,nrow=3)
rbind(y1,y2)
y1 = matrix(1:15, nrow = 3)
y2 = matrix(31:45, nrow = 3)
rbind(y1,y2)
cbind(y1,y2)
list(a = 1, b = 1:3, c = y1)
y3 = list(a = 1,
b = 1:3,
c = y1,
d = data1)
y3
y3[[3]]
y3[3]
y3[[3]][2,3]
y3[[2]][2]
y4=list(a=y3,b=y3)
y4
str(y4)
y4[[1]]
y4[[1]][[3]]
y4[[1]][[3]][2,3]
y4$a$c
read.table("txt1.txt")
read.table("txt1.txt",sep="")
read.table("txt1.txt",sep="\n")
read.lines("txt1.txt")
read.Lines("txt1.txt")
readLines("txt1.txt")
readLines("txt1.txt",encoding = 'utf-8')
readLines("txt1.txt",encoding = 'UTF-8')
txt1=readLines("txt1.txt",encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
x5
x5 >=6
x5=c(7,6,3,5)
x5 >=6
x5[x5>=6]
txt2=txt1[nchar(txt1)>0]
txt2
txt1
txt2
library(KoNLP)
library(KoNLP)
library(KoNLP)
install.packages('KoNLP', dependencies = T)
library(KoNLP)
txt3=extractNoun(txt2)
txt2
table(txt3)
txt3=extractNoun(txt2)
extractNoun("오호 ")
extractNoun("아버지가 방을 나가신다")
extractNoun(txt2)
extractNoun(txt2[1])
extractNoun(txt2[2])
txt2
extractNoun(txt2[15])
extractNoun(txt2[14])
extractNoun(txt2)
extractNoun(txt1)
extractNoun(txt2)
extractNoun(txt2[3])
extractNoun(txt2[4])
extractNoun(txt2[1:10])
extractNoun(txt2[10])
extractNoun(txt2[11])
install.packages('wordcloud2')
extractNoun(txt2)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
txt2 = txt1[nchar(txt1) > 0]
txt2
library(KoNLP)
extractNoun(txt2)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt4 = table(txt3)
install.packages('wordcloud2')
library(wordcloud2)
txt5= as.data.frame(txt4)
extractNoun(txt2[0])
txt2
extractNoun(txt2[1])
extractNoun(txt2)
extractNoun(txt2)
extractNoun(txt2)
txt2
txt2 = txt1[nchar(txt1) > 0]
# 왜 이게 안될까
txt3 = extractNoun(txt2)
wordcloud2(txt1)
txt4 = table(txt2)
install.packages('wordcloud2')
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
txt2
wordcloud2(txt5)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt2 = txt1[nchar(txt1) > 0 && nchar(txt1)<20]
txt2
txt2 = txt1[nchar(txt1) > 0 & nchar(txt1)<20]
txt2
txt2 = txt1[nchar(txt1) > 0 ]
txt2
extractNoun(txt2)
install.packages('KoNLP', dependencies = T)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
txt2 = txt1[nchar(txt1) > 0 ]
txt2
library(KoNLP)
extractNoun(txt2)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt4 = table(txt2)
install.packages('wordcloud2')
library(wordcloud2)
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
wordcloud2(txt5)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
txt2 = txt1[nchar(txt1) > 0 ]
txt2
library(KoNLP)
extractNoun(txt2)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt4 = table(txt2)
install.packages('wordcloud2')
install.packages("wordcloud2")
library(wordcloud2)
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
txt5
txt1=readLines('txt1.txt', encoding = 'UTF-8') #vetor의 원소로 배당
class(txt1) #데이터 객체 구성요소의 속성
str(txt1)
nchar(txt1)
x5=c(7,6,3,5)
x5>=6 #결과로 true, false
x5[x5>=6] #결과로 값
txt2=txt1[nchar(txt1)>0]
length(txt1)
length(txt2)
library(KoNLP)
txt3=extractNoun(txt2)
class(txt3)
txt3
txt4=unlist(txt3)
txt4=table(unlist(txt3)) #단어들빈도
txt4
install.packages("wordcloud2")
install.packages("wordcloud2")
library(wordcloud2)
txt5=as.data.frame(txt4)
wordcloud2(txt5)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
length(txt1)
length(txt2)
txt2 = txt1[nchar(txt1) > 0]
library(KoNLP)
txt3 = extractNoun(txt2)
txt3
class(txt3)
txt4 = unlist(txt3)
txt4 = table(unlist(txt3)) #단어들빈도
txt4
install.packages("wordcloud2")
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
library(wordcloud2)
install.packages("wordcloud2")
install.packages("vcd")
library(vcd)
counts<-table(Arthritis$Improved)
counts
barplot(counts,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
barplot(
counts,
main = "Horizontal Bar Plot",
xlab = "Improvement",
ylab = "Frequency",
horiz = TRUE
)
png(filename = simple_bar_plot,
height = 400,
width = 400)
png(filename = simple bar plot,
height = 400,
width = 400)
png(filename = "simple_bar_plot",
height = 400,
width = 400)
dev.off()
barplot(counts,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
png(filename = "simple_bar_plot",
height = 400,
width = 400)
barplot(counts,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
dev.off()
png(filename = "simple_bar_plot",
height = 400,
width = 400)
barplot(counts,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
dev.off()
png(filename = "simple_bar_plot.png",
height = 400,
width = 400)
barplot(counts,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
dev.off()
plot(Arthritis$Improved,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
barplot(counts,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
barplot(
counts,
main = "Horizontal Bar Plot",
xlab = "Improvement",
ylab = "Frequency",
horiz = TRUE
)
plot(Arthritis$Improved,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
methods("plot")
counts<-table(Arthritis$Improved,Arthritis$Treatment)
counts
barplot(counts,
main = "Stack Bar Plot",
xlab = "Treatment",
ylab = "Frequency",col=c("red","yellow","green"),legend=rownames(counts))
barplot(
counts,
main = "Stack Bar Plot",
xlab = "Treatment",
ylab = "Frequency",
col = c("red", "yellow", "green"),
legend = rownames(counts),
beside = T
)
barplot(
counts,
main = "Stack Bar Plot",
xlab = "Treatment",
ylab = "Frequency",
col = c("red", "yellow", "green"),
legend = rownames(counts),
beside = F
)
counts1 <- table(Arthritis$Improved, Arthritis$Treatment)
counts1
barplot(
counts,
main = "Stack Bar Plot",
xlab = "Treatment",
ylab = "Frequency",
col = c("red", "yellow", "green"),
legend = rownames(counts1),
beside = F # 누적형
)
spine(counts1)
spine(t(counts1))
spine((counts1))
spine(t(counts1))
spine((counts1))
spine(t(counts1))
spine(t(counts1))
spine((counts1))
spine(t(counts1))
spine(t(counts1))
spine(t(counts1))
spine(t(counts1))
spine((counts1))
pie(counts)
par(mfrow=c(2,1))
pie(counts)
par(mfrow = c(1, 2))
pie(counts)
pie(counts)
install.packages("plorix")
install.packages("plotrix")
library(plotrix)
pie3D(counts)
pie3D(counts,labels=colnames(count))
pie3D(counts,labels=colnames(counts))
pie3D(counts,labels=rownames(counts))
mtcars$mpg
hist(mtcars$mpg)
hist(mtcars$mpg,breaks = 12)
lines(density(mtcars$mpg))
lines(density(mtcars$mpg,col="blue",lwd=2))
lines(density(mtcars$mpg), col = "blue", lwd = 2)
hist(mtcars$mpg, breaks = 12, freq = F)
lines(density(mtcars$mpg), col = "blue", lwd = 2)
install.packages("sm")
library(sm)
mtcars$cyl
mtcars$mpg
cyl.f <- factor(
mtcars$cyl,
levels = c(4, 6, 8),
lables = c("4cylinder", "6cylinder", "8cylinder")
)
cyl.f <- factor(
mtcars$cyl,
levels = c(4, 6, 8),
labels = c("4cylinder", "6cylinder", "8cylinder")
)
cyl.f
str(cyl.f)
sm.density.compare(mtcars$mpg, mtcars$cyl, xlap = "Miles per Gallon", title =
"MPG...")
sm.density.compare(mtcars$mpg, mtcars$cyl, xlap = "Miles per Gallon", title =
"MPG...")
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title = (main = "MPG..."))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title = (main = "MPG..."))
confill=c(2:(1+length(levels(cyl.f))))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
confill=c(2:(1+length(levels(cyl.f))))
title  (main = "MPG...")
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
confill = c(2:(1 + length(levels(cyl.f))))
title  (main = "MPG..."))
legend(locator(1))
legend(locator(1), levels(cyl.f), fill = colfill)
confill = c(2:(1 + length(levels(cyl.f))))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
confill = c(2:(1 + length(levels(cyl.f))))
legend(locator(1), levels(cyl.f), fill = colfill)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
confill = c(2:(1 + length(levels(cyl.f))))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
str(cyl.f)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
confill = c(2:(1 + length(levels(cyl.f))))
legend(locator(1), levels(cyl.f), fill = confill)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
mtcars$cyl
mtcars$mpg
cyl.f <- factor(
mtcars$cyl,
levels = c(4, 6, 8),
labels = c("4cylinder", "6cylinder", "8cylinder")
)
str(cyl.f)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title  (main = "MPG..."))
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title(main = "MPG..."))
plot(Arthritis$Improved,
main = "Simple Bar Plot",
xlab = "Improvement",
ylab = "Frequency")
mtcars$cyl
mtcars$mpg
cyl.f <- factor(
mtcars$cyl,
levels = c(4, 6, 8),
labels = c("4cylinder", "6cylinder", "8cylinder")
)
str(cyl.f)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title(main = "MPG..."))
mtcars$mpg
hist(mtcars$mpg, breaks = 12, freq = F)
lines(density(mtcars$mpg), col = "blue", lwd = 2)
library(sm)
mtcars$cyl
mtcars$mpg
cyl.f <- factor(
mtcars$cyl,
levels = c(4, 6, 8),
labels = c("4cylinder", "6cylinder", "8cylinder")
)
str(cyl.f)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlap = "Miles per Gallon",
title(main = "MPG..."))
confill = c(2:(1 + length(levels(cyl.f))))
library(sm)
mtcars$cyl
mtcars$mpg
cyl.f <- factor(mtcars$cyl,
levels = c(4, 6, 8),
labels = c("4cylinder",
"6cylinder",
"8cylinder"))
str(cyl.f)
sm.density.compare(mtcars$mpg,
mtcars$cyl,
xlab = "miles per gallon"
)
title(main = "MPG.")
colfill <- c(2:(1 + length(levels(cyl.f))))
legend(locator(1), levels(cyl.f), fill = colfill)
boxplot(mtcars$mpg,main="Box Plot",ylab="Miles per Gallon")
mtcars$mpg
median(mtcars$mpg)
c(1,2,3,4,5)
median(c(1,2,3,4,5))
median(c(1,2,3,4,5,6))
stat$out
boxplot(mpg ~ cyl, data = mtcars)
dotchart(mtcars$mpg,labels=rownames(mtcars))
dotchart(mtcars$mpg, labels = rownames(mtcars), cex=.8)
myvars<-c("mpg","hp","wt")
summary(mtcharts[myvars])
summary(mtcarts[myvars])
summary(mtcars[myvars])
var(mtcars$mpg)
sd(mtcars$mpg)
boxplot(mtcars$mpg)
sd(mtcars$mpg)
sd(mtcars$hp)
boxplot(mtcars$hp)
hist(mtcars$mpg)
sd(mtcars$disp)
boxplot(mtcars$disp)
hist(mtcars$disp)
