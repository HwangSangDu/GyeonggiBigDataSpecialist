iris
str(iris)
view(iris)
View(iris)
edit(iris)
length(x4)
(x4 = c(1, 5, 9, 2, 6))
x4[-c(2, 5)]
length(x4)
length(iris)
nrow(iris)
names(x4)
names(iris)
ncol(iris)
names(x4)=c(x1)
# =, <-, ->, <<-, ->>, %>%
x1 = 1
x2 = "abc"
# Vector
x3 = 1:5
x3
print(x3)
x3[-3]
(x4 = c(1, 5, 9, 2, 6))
x4[-c(2, 5)]
rep(3, 5)
? rep
names(x4)=c(x1)
paste('x', 1:length(x4), sep = '')
names(x4) = paste('x', 1:length(x4), sep = '')
names(x4)
x4['x3']
names(iris)
names(iris)[2]
rownames[2:5,2]
rownames()
irsi[2:5,2]
iris[2:5,2]
iris[, 'Sepal.Length']
iris[, 'Sepal.Length']
iris$'Sepal.Length'
iris$Sepal.Length
iris[2]
mode(iris[2])
mode(iris[2])
mode(iris[,1:4])
mean(iris[,1:4])
iris[,1:4]
x5<-iris[,1:4]
mode(x5)
class(x5)
x5<-as.matrix(x5)
x5<-as.matrix(x5)
mode(x5)
class(x5)
mean(x5)
sample(1:nrow(iris), nrow(iris) * 0.7, replace = F)
ind = sample(1:nrow(iris), nrow(iris) * 0.7, replace = F)
train = iris[ind1, ]
test = iris[-ind1, ]
ind = sample(1:nrow(iris), nrow(iris) * 0.7, replace = F)
ind1 = sample(1:nrow(iris), nrow(iris) * 0.7, replace = F)
train = iris[ind1, ]
test = iris[-ind1, ]
nrow(train)
nrow(test)
matrix(nrow=10,ncol=5)
x7 =matrix(nrow=10,ncol=5)
x7
x8 = matrix(1:45,nrow=5)
x8 = matrix(1:45, nrow = 1)
x8
x8 = matrix(1:45, nrow = 5)
x8
x8 = matrix(1:45, nrow = 5, byrow = T)
x8
dim(x8)[1]
dim(x8)
x8
x9 = array(1:60, dim = c(4, 5, 3))
x9
install.packages('readbitmap')
library(jpeg)
img1=readJPEG('img1.jpg')
class(img1)
dim(img1)
dim(img1)[1]
1:5 + 3
img2=img1
img2[, , 1] = img2[, , 1] * 0.7
img2[, , 1] = img2[, , 1] * 0.7
img2 = img1
img2[, , 1] = img2[, , 1] * 0.7
img3=img2[100:300,100:400,]
writeJPEG(img3, 'img3.jpg')
img1 = readJPEG('img1.jpg')
img2 = img1
img2[, , 1] = img2[, , 1] * 0.7
img3 = img2[100:300, 100:400, ]
writeJPEG(img3, 'img3.jpg')
img4 = matrix(img1, nrow = 1)
img4 = matrix(img1, nrow = 1, byrow = T)
dim(img4)
data.frame(a=1:3,b=c(1.5,2.2,3.4),c=letters[1:3])
data1=data.frame(a=1:3,b=c(1.5,2.2,3.4),c=letters[1:3])
data1
colnames(data1)[2]="xx"
data1
data1[2 ,'a' ]
data1$a
c(x4,4,5)
cbind
y1=matrix(1:15,nrow=3)
rbind(y1,y2)
y1 = matrix(1:15, nrow = 3)
y2 = matrix(31:45, nrow = 3)
rbind(y1,y2)
cbind(y1,y2)
list(a = 1, b = 1:3, c = y1)
y3 = list(a = 1,
b = 1:3,
c = y1,
d = data1)
y3
y3[[3]]
y3[3]
y3[[3]][2,3]
y3[[2]][2]
y4=list(a=y3,b=y3)
y4
str(y4)
y4[[1]]
y4[[1]][[3]]
y4[[1]][[3]][2,3]
y4$a$c
read.table("txt1.txt")
read.table("txt1.txt",sep="")
read.table("txt1.txt",sep="\n")
read.lines("txt1.txt")
read.Lines("txt1.txt")
readLines("txt1.txt")
readLines("txt1.txt",encoding = 'utf-8')
readLines("txt1.txt",encoding = 'UTF-8')
txt1=readLines("txt1.txt",encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
x5
x5 >=6
x5=c(7,6,3,5)
x5 >=6
x5[x5>=6]
txt2=txt1[nchar(txt1)>0]
txt2
txt1
txt2
library(KoNLP)
library(KoNLP)
library(KoNLP)
install.packages('KoNLP', dependencies = T)
library(KoNLP)
txt3=extractNoun(txt2)
txt2
table(txt3)
txt3=extractNoun(txt2)
extractNoun("오호 ")
extractNoun("아버지가 방을 나가신다")
extractNoun(txt2)
extractNoun(txt2[1])
extractNoun(txt2[2])
txt2
extractNoun(txt2[15])
extractNoun(txt2[14])
extractNoun(txt2)
extractNoun(txt1)
extractNoun(txt2)
extractNoun(txt2[3])
extractNoun(txt2[4])
extractNoun(txt2[1:10])
extractNoun(txt2[10])
extractNoun(txt2[11])
install.packages('wordcloud2')
extractNoun(txt2)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
txt2 = txt1[nchar(txt1) > 0]
txt2
library(KoNLP)
extractNoun(txt2)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt4 = table(txt3)
install.packages('wordcloud2')
library(wordcloud2)
txt5= as.data.frame(txt4)
extractNoun(txt2[0])
txt2
extractNoun(txt2[1])
extractNoun(txt2)
extractNoun(txt2)
extractNoun(txt2)
txt2
txt2 = txt1[nchar(txt1) > 0]
# 왜 이게 안될까
txt3 = extractNoun(txt2)
wordcloud2(txt1)
txt4 = table(txt2)
install.packages('wordcloud2')
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
txt2
wordcloud2(txt5)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt2 = txt1[nchar(txt1) > 0 && nchar(txt1)<20]
txt2
txt2 = txt1[nchar(txt1) > 0 & nchar(txt1)<20]
txt2
txt2 = txt1[nchar(txt1) > 0 ]
txt2
extractNoun(txt2)
install.packages('KoNLP', dependencies = T)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
txt2 = txt1[nchar(txt1) > 0 ]
txt2
library(KoNLP)
extractNoun(txt2)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt4 = table(txt2)
install.packages('wordcloud2')
library(wordcloud2)
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
wordcloud2(txt5)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
txt2 = txt1[nchar(txt1) > 0 ]
txt2
library(KoNLP)
extractNoun(txt2)
# 왜 이게 안될까
txt3 = extractNoun(txt2)
txt4 = table(txt2)
install.packages('wordcloud2')
install.packages("wordcloud2")
library(wordcloud2)
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
txt5
txt1=readLines('txt1.txt', encoding = 'UTF-8') #vetor의 원소로 배당
class(txt1) #데이터 객체 구성요소의 속성
str(txt1)
nchar(txt1)
x5=c(7,6,3,5)
x5>=6 #결과로 true, false
x5[x5>=6] #결과로 값
txt2=txt1[nchar(txt1)>0]
length(txt1)
length(txt2)
library(KoNLP)
txt3=extractNoun(txt2)
class(txt3)
txt3
txt4=unlist(txt3)
txt4=table(unlist(txt3)) #단어들빈도
txt4
install.packages("wordcloud2")
install.packages("wordcloud2")
library(wordcloud2)
txt5=as.data.frame(txt4)
wordcloud2(txt5)
txt1 = readLines("txt1.txt", encoding = 'UTF-8')
class(txt1)
str(txt1)
nchar(txt1)
txt1
x5 = c(7, 6, 3, 5)
x5 >= 6
x5[x5 >= 6]
length(txt1)
length(txt2)
txt2 = txt1[nchar(txt1) > 0]
library(KoNLP)
txt3 = extractNoun(txt2)
txt3
class(txt3)
txt4 = unlist(txt3)
txt4 = table(unlist(txt3)) #단어들빈도
txt4
install.packages("wordcloud2")
txt5 = as.data.frame(txt4)
wordcloud2(txt5)
library(wordcloud2)
install.packages("wordcloud2")
