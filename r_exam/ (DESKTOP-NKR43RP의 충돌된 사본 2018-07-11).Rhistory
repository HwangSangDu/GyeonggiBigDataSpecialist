library(base64enc)
library(ROAuth)
getUsers("me",fb_ouath)
getUsers("me",fb_ouath,TRUE)
getUsers("me",fb_ouath,private_info = TRUE)
getUsers("me",fb_ouath,private_info = T)
getUsers("FacebookKorea",fb_ouath,private_info = T)
getPage("FacebookKorea",fb_ouath,private_info = T)
getPage("FacebookKorea",fb_ouath
)
getPage("FacebookKorea",fb_ouath,n=100)
getPage("FacebookKorea", token = fb_ouath, n = 100)
fb_ouath = "EAAHnGEpl5kYBAAXq5d0X37t7hs4kobJhwdlGC85ZAKnBb7TpI8UbALSc2B9hRZBZCq5o6qXZA0Coaw24xUssXCNbFRvIs1v6JruQ1j2ZAAb4N42bhdoCiz1IZCL3WWKKJJiyJhjhbLJmTQqkBQsyvzkFnYdNkYPfJcX54dX1WP0yI05Paiu4rO5ZBpyBHicupw1wfMwTsRiBgZDZD"
getPage("FacebookKorea", token = fb_ouath, n = 100)
fb_ouath = "EAAHnGEpl5kYBAGMPclYHlxiJASQES6ovcf7EZB0KF8Pfp2bWHG5DNVQYX6yiKIuBvomn8r3ZAwIDJdfZAyZBoezZB9M2CIx3Put28EMMqdvaSyemAGBbhY0kyehz7dNXU62F1015WFqRzKOdTGH507GnCVcQgfOBrLNFrbzm19ZClL3pODE7C7WYcVLvqntEWhwf4MR2pAewZDZD"
getPage("FacebookKorea", token = fb_ouath, n = 100)
getPage("FacebookKorea", token = fb_ouath)
getPage("FacebookKorea", token = fb_ouath)
for(i in range(2,100,2))
{
print(i)
}
range(2,100,2)
range(2:100,2)
{
print(i)
}
range(2:100,2)
range(2:100)
for(i in (2:100,2))
{
print(i)
}
for(i in (2:100))
{
print(i)
}
range(2:100)
for(i in (2:100))
{
if (i%2 == 0)
{
print(i)
}
}
for(i in (2:100))
{
if (i%2 == 0)
{
print(i)
}
}
for(i in (2:100))
{
if (i%2 == 0)
{
print(i)
}
}
for(i in (2:100))
{
if (i%2 == 0)
{
print(i)
}
}
if (i % 2 == 0)
if (i % 2 == 0)
if (i % 2 == 0)
if (i % 2 == 0)
if (i % 2 == 0)
if (i % 2 == 0){
print(i)
}
if (i % 2 == 0){
print(i)
}
if (i % 2 == 0){
print(i)}
if (i % 2 == 0){
}
for(i in (2:100))
{
if (i % 2 == 0)
{
print(i)
}
}
print(i)
for(i in (2:100))
{
print(i)
}
for(i in (2:100))
{
if(i %% 2 == 0){
print(i)
}
}
for(i in (2:100))
{
if(i %% 2 == 0){
print(i)
}
}
y <- matrix(c(2, 5, 5, -1, -1, 0, 2, 4, 3)
y
y <- matrix(c(2, 5, 5, -1, -1, 0, 2, 4, 3))
y
y <- matrix(c(2, 5, 5, -1, -1, 0, 2, 4, 3),ncol=3)
y
y <- matrix(c(2, 5, 5,-1,-1, 0, 2, 4, 3), nrow = 3)
y
y <- matrix(c(2, -1,-1, 5, -1, 4, 5, 0, 3), nrow = 3)
y
solve(y)
data.frame(
id = c("id1,id2,id3,id4"),
이름     = c("유관순",
"이순신",
"강감찬", "안창호"),
학번    = c(0761004, 0761008, 0761020, 0761034)
)
data.frame(
id = c("id1","id2","id3","id4"),
이름     = c("유관순",
"이순신",
"강감찬", "안창호"),
학번    = c(0761004, 0761008, 0761020, 0761034)
)
c(46, 35, 52, 38, 39, 51, 49, 47, 45, 50, 48, 52
)
data.frame(
c(46, 35, 52, 38, 39, 51, 49, 47, 45, 50, 48, 52
)
)
data.frame(c(46, 35, 52, 38, 39, 51, 49, 47, 45, 50, 48, 52))
data.frame(c(46, 35, 52, 38, 39, 51, 49, 47, 45, 50, 48, 52))
class(y)
edit()
TRUE+1
FALSE+1
x <- c(1, 4, 6, 8, 9
)
y<-replace(x,c(2,4),c(32,24))
y
w<-append(x,y)
z<-append(x,y,after=2)
w
y
z
x<-runif(5)
(0.4<=x)&(x<=0.7)
any(x>0.9)
all(x<0.9)
is.vector(x)
x <- runif(5)
(0.4 <= x) & (x <= 0.7)
any(x>0.9)
all(x<0.9)
vec1<-c(1,2,3)
vec1 <- c(1, 2, 3)
vec1 <- c(1, 2, 3)
vec1 <- c(4,5,6)
vec1 <- c(7,8,9)
mat1<-rbind(vec1,vec2,vec3)
vec1 <- c(1, 2, 3)
vec2 <- c(4,5,6)
vec3 <- c(7,8,9)
mat1<-rbind(vec1,vec2,vec3)
mat1
mat2<-cbind(vec1,vec2,vec3)
mat2
?apply
mtcars
str(mtcars)
edit(mtcars)
data <- scan()
data
manager <- c(1, 2, 3, 4, 5)
data <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1
)
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringAsFactors=FALSE)
leadership <-
data.frame(manager,
date,
country,
gender,
age,
q1,
q2,
q3,
q4,
q5,
stringAsFactors = FALSE)
leadership <-
data.frame(manager,
date,
country,
gender,
age,
q1,
q2,
q3,
q4,
q5,
stringAsFactors = FALSE)
manager
date
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
leadership <-
data.frame(manager,
date,
country,
gender,
age,
q1,
q2,
q3,
q4,
q5,
stringAsFactors = FALSE)
leadership
leadership <-
data.frame(manager,
date,
country,
gender,
age,
q1,
q2,
q3,
q4,
q5,
stringFactors = FALSE)
leadership
leadership <-
data.frame(manager,
date,
country,
gender,
age,
q1,
q2,
q3,
q4,
q5,
stringAsFactors = FALSE)
leadership
leadership <-
data.frame(manager,
date,
country,
gender,
age,
q1,
q2,
q3,
q4,
q5,
stringsAsFactors = FALSE)
l
leadership
leadership$age[leadership$age==99]<-NA
Sys.Date()
# 실습문제1
# 1. R에서 제공하는 cars 데이터셋에 대한 물음에 답하시오.
# (1) 이 데이터셋을 불러와서 CAR 객체(변수)에 저장하시오.
cars
# 실습문제1
# 1. R에서 제공하는 cars 데이터셋에 대한 물음에 답하시오.
# (1) 이 데이터셋을 불러와서 CAR 객체(변수)에 저장하시오.
CAR<-cars
# (2) cars 데이터셋에 대한 도움말을 찾아 어떤 변수들로 구성되어 있는지 확인하시오.
?cars
str(cars)
# 2. 다음과 같은 형식의 데이터가 주어진 경우에 대한 물음에 답하시오.
# x 5 7 8 9
# y 4 8 6 10
# z A B C D
# (1) 벡터 x, y, z를 생성하시오.
x<-c(5,7,8,9)
y<-c(4,8,6,10)
z<-c("A","B","C","D")
# (2) x의 두 번째 원소와 y의 세 번째 원소를 비교하는 명령어를 작성하고 실행하시오.
x[2]>y[3]
# (3) x/y의 몫을 구하시오.
x/y
# (3) x/y의 몫을 구하시오.
x//y
# (3) x/y의 몫을 구하시오.
x/y
# (3) x/y의 몫을 구하시오.
x%/%y
# (4) 벡터 x를 이용하여 2×2 행렬을 만드시오.
matrix(x)
# (4) 벡터 x를 이용하여 2×2 행렬을 만드시오.
matrix(x,nrow = 2)
# (5) 벡터 x, y, z를 이용하여 데이터프레임 data를 생성하시오.
data<-data.frame(x,y,z)
data
# 3. 파일로 작성된 salary.csv 데이터를 R에서 읽어 데이터프레임으로 저장하고, 데이터
# 의 구조와 특징을 설명하시오.
read.csv("./data/salary.csv")
# 3. 파일로 작성된 salary.csv 데이터를 R에서 읽어 데이터프레임으로 저장하고, 데이터
# 의 구조와 특징을 설명하시오.
salary<-read.csv("./data/salary.csv")
salary
str(salary)
summary(salary)
# 4. ggplot2 패키지에는 미국 동북중부 437개 지역의 인구통계 정보를 담은 midweat라
# 는 데이터가 들어있다.
# (1) midwest 데이터를 데이터 프레임 형태로 불러온 후 데이터의 특징을 파악하여 설명
# 하시오.
midwest
# 4. ggplot2 패키지에는 미국 동북중부 437개 지역의 인구통계 정보를 담은 midweat라
# 는 데이터가 들어있다.
# (1) midwest 데이터를 데이터 프레임 형태로 불러온 후 데이터의 특징을 파악하여 설명
# 하시오.
library(ggplot2)
midwest
str(midwest)
summary(midws )
summary(midwest)
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest$poptotal)<-"total"
names(midwest$poptotal)
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
names(midwest[5])<-"total"
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
names(midwest)[5]<-"total"
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
names(midwest)[10]<-"asian"
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
# (3) total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 변수를 생성하고
midwest$total
# (3) total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 변수를 생성하고
midwest$total
midwest$asian
# (3) total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 변수를 생성하고
midwest$total
# (3) total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 변수를 생성하고
head(midwest$total)
head(midwest$asian)
head(midwest$asian/midwest$total)
head(midwest$asian/midwest$total * 100)
midwest$asianOfTotalPercent<-midwest$asian/midwest$total * 100
midwest$
asianOfTotalPercent
?midwest$asianOfTotalPercent
summary(midwest$asianOfTotalPercent)
str(midwest$asianOfTotalPercent)
# (4) 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 “large”, 그 외에는
# “small”을 부여하는 변수를 생성하시오.
mean(midwest$asianOfTotalPercent)
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
midwest
midwest$var
midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
midwest$var
midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)
ifelse(midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent),"large","small")
midwest$var<-ifelse(midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent),"large","small")
midwest$var
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
# (5) “large”, “small”에 해당하는 지역이 얼마나 되는 빈도를 구하여 확인하시오.
summary(midwest$var)
table(midwest$var)
midwest$var
midwest$var<-ifelse(midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent),"large","small")
# (5) “large”, “small”에 해당하는 지역이 얼마나 되는 빈도를 구하여 확인하시오.
summary(midwest$var)
table(midwest$var)
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)==TRUE) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)==TRUE) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
}
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
} else{
"small"
}
midwest$var
summary(midwest$asianOfTotalPercent)
table(midwest$asianOfTotalPercent)
summary(midwest$asianOfTotalPercent)
summary(midwest)
midwest
class(midwest)
as.data.frame(midwest)
class(as.data.frame(midwest))
midwest<-(as.data.frame(midwest))
str(midwest)
summary(midwest)
class(midwest)
# (2) poptotal 변수를 total로, popasian 변수를 asian으로 수정하시오.
names(midwest)
names(midwest)[5] <- "total"
names(midwest)[10] <- "asian"
# (3) total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 변수를 생성하고
# 분포가 어떠하진 확인하고 설명하시오.
head(midwest$total)
head(midwest$asian)
head(midwest$asian / midwest$total * 100)
midwest$asianOfTotalPercent <- midwest$asian / midwest$total * 100
summary(midwest$asianOfTotalPercent)
# (4) 아시아 인구 백분율 전체 평균을 구하고 평균을 초과하면 “large”, 그 외에는
# “small”을 부여하는 변수를 생성하시오.
mean(midwest$asianOfTotalPercent)
if (midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)) {
midwest$var <- "large"
} else{
midwest$var <- "small"
}
midwest$var <-
ifelse(midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent),
"large",
"small")
midwest$var
# (5) “large”, “small”에 해당하는 지역이 얼마나 되는 빈도를 구하여 확인하시오.
summary(midwest$var)
table(midwest$var)
midwest$var[midwest$asianOfTotalPercent > mean(midwest$asianOfTotalPercent)]<-"large"
midwest$var[midwest$asianOfTotalPercent <= mean(midwest$asianOfTotalPercent)]<-"small"
midwest$var
salary
# 3. 파일로 작성된 salary.csv 데이터를 R에서 읽어 데이터프레임으로 저장하고, 데이터
# 의 구조와 특징을 설명하시오.
salary <- read.csv("./data/salary.csv",header = T)
salary
x<-c(1,2,3,4)
switch (x[2],
"1"==print("one"),"2"==print("two"),"3"==print("three"),print("NOT")
)
switch (x[2],
"1"==print("one"),"2"==print("two"),"3"==print("three"),print("NOT")
)
fibo<-function(n){
if(n==1||n==2){
return(1)
}
return(fibo(n-1)+fibo(n-2))
}
fibo(1)
circle <- function(r){
r^2*3.14
}
circle(2)
circle(1)
squre <- function(upper, lower, height)
{
(upper + lower) * height / 2
}
squre(1,1,1)
circle <- function(r) {
return r ^ 2 * 3.14
}
circle <- function(r) {
return (r ^ 2 * 3.14)
}
circle(2)
squre <- function(upper, lower, height)
{
return((upper + lower) * height / 2)
}
squre(1,1,1)
squre(3,1,1)
squre(3,1,2)
squre(1,1,3)
